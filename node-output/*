{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "API Prueba",
    "description" : "prueba\n",
    "contact" : {
      "name" : "esteban",
      "email" : "you@your-company.com"
    },
    "version" : "1.0.1"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/ESTEBANDAVIDROSEROPE_1/bbe-msa-bs-template-v1.1/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "http://localhost:8080/business/business-banking/v1",
    "description" : "Development"
  } ],
  "tags" : [ {
    "name" : "User",
    "description" : "User Controller"
  }, {
    "name" : "User Approval Level",
    "description" : "User Approval Level Controller"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves a list of users.",
        "description" : "Details:\nValid use of parameters:\n\n**Retrieves a list of users, by default list the users of a customer affiliated**\n\n| Expected Result  | Path Parameter | Query Parameter                 |\n| ---------------- | ------------   | -----------------------------------|\n| Retrieves a Own Account Transfer Order| - | trayOrderId   |\n| Retrieves a Own Account Transfer and its items| - | trayOrderId, moreData= ownAccountTransferOrderItems|\n\n<table>\n  <tr>\n    <th>Expected Result</th>\n    <th>Path Parameter</th>\n    <th>Query Parameter</th>\n  </tr>\n  <tr>\n    <td>Retrieves a Own Account Transfer Order</td>\n    <td>-</td>\n    <td>trayOrderId</td>\n  </tr>\n  <tr>\n    <td>Retrieves a Own Account Transfer and its items</td>\n    <td>-</td>\n    <td>trayOrderId, moreData= ownAccountTransferOrderItems</td>\n  </tr>\n</table>\n",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "app-name",
          "in" : "header",
          "description" : "Application Name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "back"
          }
        }, {
          "name" : "caller-name",
          "in" : "header",
          "description" : "Api name who request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "test"
          }
        }, {
          "name" : "request-id",
          "in" : "header",
          "description" : "Request Identifier",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/request-id"
          }
        }, {
          "name" : "request-date",
          "in" : "header",
          "description" : "Request Date | RFC 3339 Format",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/request-date"
          }
        }, {
          "name" : "customer-affiliation-id",
          "in" : "header",
          "description" : "Customer affiliated to business Banking",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "qwerccf-a60b-45e8-b5e3-215924834e5"
          }
        }, {
          "name" : "customer-user-id",
          "in" : "header",
          "description" : "User executing the operation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "qwercsa-sas-sas-sas-215924834e5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GetUserResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request information it's not correct.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401" : {
            "description" : "You're not authorized to perform this operation.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have the right permissions to execute this operation.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500" : {
            "description" : "An error has occurred.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "502" : {
            "description" : "The service is not available.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Creates an user.",
        "description" : "Creates an user.",
        "operationId" : "postUser",
        "parameters" : [ {
          "name" : "app-name",
          "in" : "header",
          "description" : "Application Name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "Back"
          }
        }, {
          "name" : "caller-name",
          "in" : "header",
          "description" : "Api name who request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "test"
          }
        }, {
          "name" : "request-id",
          "in" : "header",
          "description" : "Request Identifier",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/request-id"
          }
        }, {
          "name" : "request-date",
          "in" : "header",
          "description" : "Request Date | RFC 3339 Format",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/request-date"
          }
        }, {
          "name" : "customer-affiliation-id",
          "in" : "header",
          "description" : "Customer affiliated to business Banking",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "sas-sas-45e8-b5e3-sas"
          }
        }, {
          "name" : "customer-user-id",
          "in" : "header",
          "description" : "User executing the operation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "sas-a60b-sas-sas-215924834e5"
          }
        } ],
        "requestBody" : {
          "description" : "Inventory item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUserRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "user created"
          },
          "400" : {
            "description" : "The request information it's not correct.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401" : {
            "description" : "You're not authorized to perform this operation.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have the right permissions to execute this operation.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500" : {
            "description" : "An error has occurred.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "502" : {
            "description" : "The service is not available.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "GetUserResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "type" : "object",
          "properties" : {
            "registerDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            }
          }
        } ]
      },
      "PostUserRequest" : {
        "$ref" : "#/components/schemas/User"
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "documentNumber" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Customer identification document number.",
            "example" : "1524"
          },
          "documentType" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Client identifier type. ID (0001) - Passport (0002) - RUC (0003).",
            "example" : "0001"
          },
          "names" : {
            "title" : "Names of user.",
            "type" : "string",
            "example" : "Jhon Carlos"
          },
          "surnames" : {
            "title" : "Last names of user.",
            "type" : "string",
            "example" : "Steward Colling"
          },
          "email" : {
            "title" : "Email",
            "type" : "string",
            "example" : "jhooe@mail.com"
          }
        }
      },
      "request-id" : {
        "type" : "string"
      },
      "request-date" : {
        "type" : "string",
        "format" : "date-time"
      },
      "ErrorModel" : {
        "required" : [ "developerMessage", "errorCode", "userMessage" ],
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "maxLength" : 6,
            "pattern" : "^[a-zA-Z]+$\\d+$",
            "type" : "string",
            "example" : "6"
          },
          "developerMessage" : {
            "maxLength" : 256,
            "pattern" : "^[a-zA-Z\\s]*$",
            "type" : "string",
            "example" : "Coding Error"
          },
          "userMessage" : {
            "maxLength" : 256,
            "pattern" : "^[a-zA-Z\\s]*$",
            "type" : "string",
            "example" : "Error al validar dispositvo"
          },
          "moreInfo" : {
            "maxLength" : 256,
            "pattern" : "^[a-zA-Z\\s]*$",
            "type" : "string",
            "example" : ""
          },
          "version" : {
            "maxLength" : 256,
            "pattern" : "^[a-zA-Z\\s]*$",
            "type" : "string",
            "example" : "1.0.0"
          },
          "status" : {
            "maxLength" : 15,
            "type" : "number",
            "example" : 409
          }
        }
      }
    },
    "parameters" : {
      "app-name" : {
        "name" : "app-name",
        "in" : "header",
        "description" : "Application Name",
        "required" : false,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "test"
        }
      },
      "caller-name" : {
        "name" : "caller-name",
        "in" : "header",
        "description" : "Api name who request",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "test"
        }
      },
      "customer-affiliation-id" : {
        "name" : "customer-affiliation-id",
        "in" : "header",
        "description" : "Customer affiliated to business Banking",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "sas-a60b-45e8-sas-215924834e5"
        }
      },
      "customer-user-id" : {
        "name" : "customer-user-id",
        "in" : "header",
        "description" : "User executing the operation",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "qwerccf-a60b-45e8-sas-215924834e5"
        }
      }
    }
  }
}